name: Build for Android

on:
  [pull_request, push, workflow_dispatch]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    strategy:
      matrix:
        arch: [ "arm32" , "aarch64" , "x86_64" ]
      fail-fast: false

    name: "Build ${{matrix.arch}}"

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: |
          sudo apt update
          sudo apt install -y libepoxy* meson libxrandr-dev libxxf86vm-dev libxcb-*-dev libx11-xcb-dev libxfixes-dev libdrm-dev libx11-dev
          pip3 install mako
          export ANDROID_NDK_HOME="$ANDROID_SDK_ROOT/ndk-bundle"
          envsubst <android-${{matrix.arch}} >build-crossfile
          git clone --depth 1 https://gitlab.freedesktop.org/mesa/drm.git
          envsubst <android-drm-${{matrix.arch}} >build-crossfile-drm
          cd drm
          meson setup "build-android" \
            --prefix=/tmp/drm-static \
            --cross-file "../build-crossfile-drm" \
            -Ddefault_library=static \
            -Dintel=disabled \
            -Dradeon=disabled \
            -Damdgpu=disabled \
            -Dnouveau=disabled \
            -Dvmwgfx=disabled \
            -Dfreedreno=enabled \
            -Dvc4=disabled \
            -Detnaviv=disabled \
            -Dfreedreno-kgsl=true
          ninja -C "build-android" install
          cd ..
          git clone --depth 1 https://github.com/anholt/libepoxy.git
          envsubst <android-${{matrix.arch}} >build-crossfile-epoxy
          cd libepoxy
          meson "build-android-${{matrix.arch}}" \
            --prefix=/tmp/build
            --cross-file "../build-crossfile-epoxy" \
            -Degl=yes -Dglx=no -Dx11=false
          ninja -C "build-android-${{matrix.arch}}" install
          cd ..
          envsubst <android-${{matrix.arch}} >build-crossfile
          meson "build-android-${{matrix.arch}}" \
            --prefix=/tmp/build \
            --cross-file "build-crossfile" \
            -Dplatforms=egl
          ninja -C "build-android-${{matrix.arch}}" install
          cp "build-android-${{matrix.arch}}/vtest/libvirgl_test_server.so" /tmp/build/lib/

          cd /tmp/build/lib
          rm libepoxy.so libepoxy.so.0 libvirglrenderer.so libvirglrenderer.so.1
          mv libepoxy.so.0.* libepoxy_0.so
          mv libvirglrenderer.so.1.* libvirglrenderer_1.so
          perl -pi -e 's/libepoxy.so.0/libepoxy_0.so/g' *.so
          perl -pi -e 's/libvirglrenderer.so.1/libvirglrenderer_1.so/g' *.so ../bin/*
      - name: Upload libraries
        uses: actions/upload-artifact@v2
        with:
          name: build_${{matrix.arch}}
          path: /tmp/build

